{"version":3,"sources":["components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","App/App.js","Services/pixabay.js","index.js"],"names":["module","exports","Searchbar","props","useState","value","setValue","className","onSubmit","e","preventDefault","trim","alert","text","type","name","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","ImageGalleryItem","imgS","imgL","onClick","src","alt","ImageGallery","images","map","id","webformatURL","largeImageURL","Button","portal","document","querySelector","Modal","showModal","children","handleKeyDown","event","code","window","removeEventListener","useEffect","addEventListener","createPortal","target","Loading","color","height","width","styles","loader","React","Component","App","page","setPage","setImages","bigImg","setBigImg","isLoading","setIsLoading","modalIsOpen","setModalIsOpen","query","url","axios","get","then","data","hits","pixabayFetch","newImages","console","log","catch","error","delay","finally","length","scrollTo","top","documentElement","scrollHeight","behavior","imgBig","img","toggleModal","modalState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a53c5a8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__25NS9\"};","import { useState } from \"react\";\r\nimport { alert } from \"@pnotify/core\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/BrightTheme.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function Searchbar(props) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (value.trim() === \"\") {\r\n      return alert({\r\n        text: \"Please, enter your query!\",\r\n      });\r\n    }\r\n    props.onSubmit(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          value={value}\r\n          name=\"value\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport const ImageGalleryItem = ({ imgS, imgL, onClick }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={imgS}\r\n        alt=\"\"\r\n        onClick={() => onClick(imgL)}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  imgS: PropTypes.string,\r\n  imgL: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { ImageGalleryItem } from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ImageGallery = ({ images, onClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ id, webformatURL, largeImageURL }) => {\r\n        return (\r\n          <ImageGalleryItem\r\n            key={id}\r\n            imgL={largeImageURL}\r\n            imgS={webformatURL}\r\n            onClick={onClick}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  onClick: PropTypes.func,\r\n};\r\n","export const Button = ({ text, onClick }) => {\r\n  return (\r\n    <button className=\"Button\" onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst portal = document.querySelector(\"#portal\");\r\n\r\nexport function Modal({ showModal, children }) {\r\n  const handleOverlayClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      showModal();\r\n    }\r\n  };\r\n  const handleKeyDown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      showModal();\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleOverlayClick}>\r\n      <div className=\"Modal\">{children}</div>\r\n    </div>,\r\n    portal\r\n  );\r\n}\r\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport React from \"react\";\r\nimport styles from \"./Loader.module.css\";\r\nexport default class Loading extends React.Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Oval\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        className={styles.loader}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Searchbar } from \"../components/Searchbar/Searchbar\";\nimport { ImageGallery } from \"../components/ImageGallery/ImageGallery\";\nimport { pixabayFetch } from \"../Services/pixabay\";\nimport { Button } from \"../components/Button/Button\";\nimport { Modal } from \"../components/Modal/Modal\";\n// import { error } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"../components/Loader/Loader\";\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [bigImg, setBigImg] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const formSubmitHandle = (value) => {\n    setValue(value);\n    setImages([]);\n    setPage(1);\n  };\n\n  useEffect(() => {\n    if (!value) {\n      return;\n    }\n    setIsLoading(true);\n    pixabayFetch(value, page)\n      .then((newImages) => {\n        setImages([...images, ...newImages]);\n        console.log(page);\n      })\n      .catch((error) =>\n        error({\n          text: \"No image!\",\n          delay: 1000,\n        })\n      )\n      .finally(() => setIsLoading(false));\n    // eslint-disable-next-line\n  }, [page, value]);\n\n  useEffect(() => {\n    if (images.length > 12) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }, [images]);\n\n  const fetchImages = () => {\n    setPage(page + 1);\n  };\n\n  const imgBig = (img) => {\n    setBigImg(img);\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  return (\n    <div className=\"Container\">\n      <Searchbar onSubmit={formSubmitHandle} />\n      {isLoading && <Loader />}\n      <ImageGallery images={images} onClick={imgBig} />\n      {images.length > 0 && <Button text={\"load more\"} onClick={fetchImages} />}\n      {modalIsOpen && (\n        <Modal showModal={imgBig} modalState={modalIsOpen}>\n          <img src={bigImg} alt=\"\" />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"23114127-913a50287ab6c0ea340feb686\";\r\nconst BASE_URL = \"https://pixabay.com/api/\"\r\n\r\nexport const pixabayFetch = ( query, page ) => {\r\n \r\n const url = `${BASE_URL}?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n\r\n  return axios\r\n    .get(url)\r\n    .then(({ data }) => data.hits)\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}