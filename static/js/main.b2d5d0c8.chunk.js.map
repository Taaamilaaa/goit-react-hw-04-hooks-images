{"version":3,"sources":["components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","Services/pixabay.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","App/App.js","index.js"],"names":["module","exports","Searchbar","props","useState","value","setValue","className","onSubmit","e","preventDefault","trim","alert","text","type","name","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","ImageGalleryItem","imgS","imgL","onClick","src","alt","ImageGallery","images","map","id","webformatURL","largeImageURL","pixabayFetch","query","page","url","axios","get","then","data","hits","Button","portal","document","querySelector","Modal","showModal","children","handleKeyDown","event","code","window","removeEventListener","useEffect","addEventListener","createPortal","target","Loading","color","height","width","styles","loader","React","Component","App","setPage","setImages","bigImg","setBigImg","isLoading","setIsLoading","modalIsOpen","setModalIsOpen","length","scrollTo","top","documentElement","scrollHeight","behavior","imgBig","img","toggleModal","console","log","catch","error","finally","nextPage","state","delay","modalState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b2d5d0c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__25NS9\"};","import {useState} from \"react\";\r\nimport { alert} from '@pnotify/core';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function Searchbar(props) {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.currentTarget.value.toLowerCase());\r\n  };\r\n  \r\n const handleSubmit = (e) => {\r\n   e.preventDefault();   \r\n    if (value.trim() === \"\") {\r\n      return alert({\r\n  text: 'Please, enter your query!'\r\n});\r\n    }\r\n    props.onSubmit(value);\r\n   setValue('');\r\n  };\r\n\r\n   return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={value}\r\n            name=\"value\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func  \r\n}","import PropTypes from 'prop-types';\r\n\r\nexport const ImageGalleryItem = ({ imgS, imgL, onClick }) => {\r\n    return (\r\n <li className=\"ImageGalleryItem\" >\r\n  <img src={imgS} alt=\"\" onClick = {() => onClick(imgL)} className=\"ImageGalleryItem-image\" />\r\n</li>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    imgS: PropTypes.string,\r\n    imgL: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}","\r\nimport React from \"react\";\r\nimport { ImageGalleryItem } from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ImageGallery = ({ images, onClick }) => {\r\n  \r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ id, webformatURL, largeImageURL }) => {\r\n        return <ImageGalleryItem key={id} imgL = {largeImageURL} imgS={webformatURL} onClick={onClick} />\r\n      })}\r\n      \r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  onClick: PropTypes.func,\r\n}","import axios from \"axios\";\r\n\r\nconst API_KEY = \"23114127-913a50287ab6c0ea340feb686\";\r\nconst BASE_URL = \"https://pixabay.com/api/\"\r\n\r\nexport const pixabayFetch = ( query, page ) => {\r\n \r\n const url = `${BASE_URL}?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n\r\n  return axios\r\n    .get(url)\r\n    .then(({ data }) => data.hits)\r\n};\r\n","export const Button = ({text, onClick}) => {\r\n    return (\r\n        <button className = \"Button\" onClick = {onClick}>{ text}</button>\r\n    )\r\n}","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst portal = document.querySelector('#portal');\r\n\r\nexport function Modal({ showModal, children }) {\r\n  const handleOverlayClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      showModal();\r\n    };\r\n  };\r\n  const handleKeyDown = event => {\r\n      if (event.code === 'Escape') {\r\n      showModal();\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n   return createPortal(\r\n      <div className='Overlay' onClick={handleOverlayClick}>\r\n        <div className='Modal'>{children}</div>\r\n      </div>,\r\n      portal,\r\n    );\r\n};","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport React from \"react\";\r\nimport styles from './Loader.module.css'\r\nexport default class Loading extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} className={ styles.loader} /> \r\n    );\r\n  }\r\n}","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Searchbar } from \"../components/Searchbar/Searchbar\";\nimport { ImageGallery } from \"../components/ImageGallery/ImageGallery\";\nimport { pixabayFetch } from \"../Services/pixabay\";\nimport { Button } from \"../components/Button/Button\";\nimport { Modal } from \"../components/Modal/Modal\";\n// import { error } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"../components/Loader/Loader\";\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [bigImg, setBigImg] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n\n  const formSubmitHandle = (value) => {\n    setValue(value);    \n    setImages([]);\n    \n    const firstPage = 1;\n    setPage(firstPage);\n\n    setIsLoading(true);\n    pixabayFetch(value, page)\n      .then((images) => {\n        console.log(firstPage);       \n        setImages([...images]);\n       \n      })\n      .catch((error) =>\n        error(\"There are no images!!!\")\n      )\n      .finally(() => setIsLoading(false));\n  };\n\n  const fetchImages = () => {\n    setIsLoading(true);\n\n    const nextPage = page + 1;\n    setPage(nextPage);\n\n    pixabayFetch(value, nextPage+1)\n      .then((images) => {\n        setImages((state) => [...state, ...images]);       \n        \n        console.log(nextPage);\n     \n      })\n      .catch((error) =>\n        error({\n          text: \"No image!\",\n          delay: 1000,\n        })\n      )\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    if (images.length > 12) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }, [images]);\n\n  const imgBig = (img) => {\n    setBigImg(img);\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setModalIsOpen(!modalIsOpen);\n  };\n\n\n  return (\n    <div className=\"Container\">\n      <Searchbar onSubmit={formSubmitHandle} />\n      {isLoading && <Loader />}\n      <ImageGallery images={images} onClick={imgBig} />\n      {images.length > 0 && <Button text={\"load more\"} onClick={fetchImages} />}\n      {modalIsOpen && (\n        <Modal showModal={imgBig} modalState={modalIsOpen}>\n          <img src={bigImg} alt=\"\" />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}